{
  "hash": "14d81b3e03382a7fa86cc58c54402196",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Lecture 02b -- Sampling designs II\nauthor: Januar Harianto\nformat: soles-revealjs\n# format: revealjs\n# fontsize: 16pt\nembed-resources: true\nexecute:\n  cache: true\n---\n\n\n\n\n\n# Welcome back!\n\n# In the last lecture...\n\n::: incremental\n- We learned about **simple random sampling**\n- Each unit had an equal chance of being selected\n- We calculated confidence intervals for population estimates\n- We saw some limitations of this approach (not always representative)\n:::\n\n\n\n## Simple random sampling {auto-animate=true}\n![](images/simple_random.png)\n\n::: fragment\n**Each unit has an equal chance of being selected.**\n:::\n\n::: fragment\n### Not *always* the case, but still a good technique.\n:::\n\n\n\n## Simple random sampling {auto-animate=true}\n**Each unit has an equal chance of being selected.**\n\n### Not *always* the case, but still a good technique.\n\n## Simple random sampling: potential problems\n\n::: fragment\nImagine tossing 10 random points onto a landscape.\n:::\n\n::: fragment\n### By pure chance...\n- We might miss some important areas entirely\n- Or sample some areas too much\n:::\n\n::: fragment\n### This is more likely when:\n- Sample size is small\n- The landscape has distinct zones\n:::\n\n\n## Simple random sampling: theoretical example\n\n::: fragment\nIf an area has:\n\n- 80% grassland\n- 20% wetland\n:::\n\n::: fragment\nWith simple random sampling:\n\n- We expect ~8 samples in grassland, ~2 in wetland\n- But by chance, we might get:\n  - 10 grassland, 0 wetland! \n  - Or 6 grassland, 4 wetland\n:::\n\n::: fragment\n### But what if we have more information about the population?\n:::\n\n## Soil carbon example\n\n::: fragment\n### Soil carbon\n![](images/datastory.png){width=\"50%\"}\n:::\n\n::: fragment\n### Different land types\n- Land type A covers 62% of the area, land type B covers 38%\n- Type A has a **higher** chance of being selected with simple random sampling\n- **Can we use this information to our advantage?**\n:::\n\n\n# ~~Simple~~ Stratified random sampling\n## Stratified random sampling\n\n### 3 steps\n\n::: incremental\n1. **Divide** the population into **homogeneous** subgroups (strata).\n2. **Sample** from each stratum using simple random sampling.\n3. **Pool** (or **combine**) the estimates from each stratum to get an overall population estimate.\n:::\n\n::: fragment\n### Real-world example\nIf studying plant biodiversity in a national park:\n\n- Step 1: Divide park into strata (e.g., forest, grassland, wetland)\n- Step 2: Take random samples within each habitat type\n- Step 3: Combine data to estimate overall biodiversity, giving proper weight to each habitat's area\n:::\n\n## Strata rules \n\n### Strata are...\n\n::: incremental\n- **Mutually exclusive and collectively exhaustive** (simple explanation: every sample belongs to exactly one stratum -- no overlaps, no leftovers)\n- **Homogeneous** - Samples within a stratum should be similar to each other (less variable than the overall population)\n- **Each stratum must be sampled** - The goal is to ensure every important group is represented\n:::\n\n::: fragment\n![](images/stratified.png)\n:::\n\n## Good vs. poor stratification choices\n\n::: fragment\n### Everyday examples\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n#### Good strata\n- **University students**: Undergrad, Masters, PhD\n- **Forest types**: Deciduous, Coniferous, Mixed\n- **Income levels**: Low, Medium, High\n:::\n\n::: {.column width=\"50%\"}\n#### Poor strata choices\n- **Interests**: Sports fans, Music lovers, Foodies (a person can be in multiple groups)\n- **Water quality**: Clean, Somewhat polluted (too subjective, not clearly defined)\n:::\n::::\n:::\n## Advantages\n\n### We address:\n\n\n- **Bias**. Each stratum is sampled, so the sample is representative of the population.\n- **Accuracy**. Each stratum is represented by a minimum number of sampling units.\n- **Insight**. We can compare strata and make inferences about the population.\n\n:::fragment\n### Does this make simple random sampling obsolete?\n\n- **No**. *Still* a good technique.\n- With large enough samples, the two methods will converge.\n- Chance of *not* selecting a unit from a stratum is always there, but reduces as the sample size increases.\n\n:::\n\n# Stratified random sampling: estimates\n\n## What are we trying to achieve with our calculations?\n\n### The statistical journey\n\n::: fragment\nOnce we have our stratified sample, we need to:\n\n1. **Estimate the population central tendency**: Calculate the pooled mean\n2. **Quantify our uncertainty**: Calculate the pooled standard error\n3. **Create an inference tool**: Build a confidence interval\n4. **Make decisions**: Compare estimates, test hypotheses\n\nAll of these steps must account for our stratified design.\n:::\n\n\n## The statistical workflow for stratified sampling\n\n### Four key steps:\n\n1. **Pooled Mean ($\\bar{y}_{s}$)**: Sum of (stratum weight × stratum mean)\n   - Best estimate of the population parameter\n\n2. **Pooled Standard Error**: $$SE(\\bar{y}_{s}) = \\sqrt{\\sum w_i^2 \\times \\frac{s_i^2}{n_i}}$$\n   - Accounts for stratum weights and within-stratum variability\n\n3. **t-Critical Value**: Based on $df = n - L$ and α = 0.05\n   - Accounts for sample size in uncertainty estimates\n\n4. **Confidence Interval**: $$\\text{Pooled mean} \\pm (t-\\text{critical} \\times SE(\\bar{y}_{s}))$$\n   - Range likely containing true population mean\n\n\n## Accounting for strata using \"weight\"\n\n### Weighted estimates\n\n- We need to \"weigh\" the estimates from each stratum to account for the different stratum sizes and inclusion probabilities.\n- Most of the time, we use the stratum size as the weight to calculate **weighted estimates**.\n- The *overall* population estimate is the sum of the weighted estimates from each stratum, i.e. we *pool the individual strata information into a single, overall population estimate*.\n\n::: fragment\n### Example\n::: incremental\n\n- A forest contains two types of trees: A and B, with 60% and 40% of the population, respectively.\n- We want to estimate the **mean height** of the trees.\n- Take **10** height measurements, of which 7 are randomly selected from type A and 3 are randomly selected from type B.\n- The **pooled estimate** for the *mean height* of the trees is: $$0.6 \\times \\text{average height of A} + 0.4 \\times \\text{average height of B}$$\n:::\n:::\n\n# Data story: soil carbon\n\n## Soil carbon data\n\n### Our case study\n\nSoil carbon content was measured at 7 locations across the area. The amounts were:\n48, 56, 90, 78, 86, 71, 42 tonnes per hectare (t/ha).\n\n![](images/datastory.png){width=\"60%\"}\n\n::: fragment\n### Setting up the data in R\n\nWe know which land type each sample came from:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlandA <- c(90, 78, 86, 71)  # stratum A samples (62% of the area)\nlandB <- c(48, 56, 42)      # stratum B samples (38% of the area) \n```\n:::\n\n\n\n\n:::\n\n## Pooled mean $\\bar y_{s}$\n\n> The pooled mean is our best estimate of the overall population mean, taking into account the different stratum sizes.\n\n::: fragment\n$$\\bar{y}_{s} = \\sum_{i=1}^L \\bar{y}_i \\times w_i$$\n\n**In simple terms:**\n\n- We calculate the mean for each stratum separately ($\\bar{y}_i$)\n- We multiply each stratum's mean by its weight ($w_i$)\n- We add these weighted means together to get the overall pooled mean\n:::\n\n## Calculating pooled mean: soil carbon example\n\n::: fragment\nWe first define the weights $w_i$ for each stratum based on their area:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweight <- c(0.62, 0.38)  # 62% of area is land type A, 38% is land type B\n```\n:::\n\n\n\n\n:::\n\n::: fragment\nThen we calculate the weighted mean:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweighted_mean <- mean(landA) * weight[1] + mean(landB) * weight[2]\nweighted_mean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 68.86833\n```\n\n\n:::\n:::\n\n\n\n\n\nThis is like saying: \"62% of our land has soil carbon like land type A, and 38% has soil carbon like land type B, so our overall estimate takes both into account in these proportions.\"\n:::\n\n## Pooled standard error of the mean $SE(\\bar y_{s})$\n\n### The formula looks similar to a standard error...\n\n$$SE(\\bar y_{s}) = \\sqrt{\\color{blue}{{\\sum_{i=1}^L w_i^2}} \\times \\frac{s_i^2}{n_i}}$$\n\n::: {.callout-note}\n### What's different?\n- Instead of a single variance term, we use the sum of weighted variances from each stratum\n- The $\\color{blue}{w_i^2}$ term ensures we account for the relative size of each stratum\n- Each stratum contributes its own variance ($s_i^2$) and sample size ($n_i$)\n:::\n\n\n## $t$-critical value\n### Degrees of freedom $df$\n\n$$df = n - L$$\n\nwhere $n$ is the total number of samples and $L$ is the number of strata.\n\n::: fragment\n- The degrees of freedom tells us how much \"free information\" we have for making estimates\n- For stratified sampling, we lose one degree of freedom for each stratum\n- **Example:** If we have 12 samples in 3 strata:\n  - The degrees of freedom is $12 - 3 = 9$\n  - Think of it this way: 9 samples can be placed anywhere, but we must have at least 1 sample in each of the 3 strata\n:::\n\n::: fragment\n### In R\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- length(landA) + length(landB) - 2\nt_crit <- qt(0.975, df)\nt_crit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.570582\n```\n\n\n:::\n:::\n\n\n\n\n\n:::\n\n## 95 % Confidence interval for stratified random sampling\n\n### The formula\n$$95\\%\\ CI = \\bar y_{s} \\pm t^{0.025}_{n-L} \\times SE(\\bar y_{s})$$\n\nwhere $L$ is the number of strata, $n$ is the total number of samples, and $\\bar y_{s}$ is the weighted mean of the strata. \n\n**In simple terms:**\n\n::: incremental \n- We're creating a range where we're 95% confident the true population mean lies\n- We start with our best estimate (the pooled mean $\\bar y_{s}$)\n- We add and subtract a \"margin of error\" (which depends on our sample size and variability)\n- The margin of error = $t$-critical value × standard error\n:::\n\n### Visualising this:\n```\nLower bound ← [Pooled mean - Margin of error] ... [Pooled mean + Margin of error] → Upper bound\n```\n\n## 95 % Confidence interval for stratified random sampling\n\n### Putting it all together\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvarA <- var(landA) / length(landA)  # variance of the mean for A\nvarB <- var(landB) / length(landB)  # variance of the mean for B\nweighted_var <- weight[1]^2 * varA + weight[2]^2 * varB\nweighted_se <- sqrt(weighted_var)\nci <- c(\n  L95 = weighted_mean - t_crit * weighted_se,\n  u95 = weighted_mean + t_crit * weighted_se\n)\nci\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     L95      u95 \n61.04864 76.68803 \n```\n\n\n:::\n:::\n\n\n\n\n\n# Comparison\n\n\n## Simple random vs. stratified random sampling\n\nWhat if we had used stratified random sampling instead of simple random sampling (and collected the same amount of data)?\n\n### What differences can you see?\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\n# Manually printing the results below as SRS data is in previous lecture\ncompare <- tibble(\n  Design = c(\"Simple Random\", \"Stratified Random\"),\n  Mean = c(67.29, 68.9), \n  `Var (mean)` = c(50.83, 9.30),\n  L95 = c(49.85, 61), \n  U95 = c(84.73, 76.7), \n  df = c(6, 5))\nknitr::kable(compare)\n```\n\n::: {.cell-output-display}\n\n\n|Design            |  Mean| Var (mean)|   L95|   U95| df|\n|:-----------------|-----:|----------:|-----:|-----:|--:|\n|Simple Random     | 67.29|      50.83| 49.85| 84.73|  6|\n|Stratified Random | 68.90|       9.30| 61.00| 76.70|  5|\n\n\n:::\n:::\n\n\n\n\n\n## Visual comparison of 95% confidence intervals\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Creating a visual comparison of confidence intervals\nggplot(compare, aes(x = Design, y = Mean)) +\n  geom_point(size = 3) +\n  geom_errorbar(aes(ymin = L95, ymax = U95), width = 0.2, size = 1) +\n  labs(title = \"95% Confidence Intervals by Sampling Design\",\n       y = \"Soil Carbon (tonnes/ha)\",\n       x = \"\") +\n  theme_minimal(base_size = 14) +\n  annotate(\"text\", x = 2, y = 55, \n           label = \"Stratified sampling gives a\\nnarrower confidence interval\\n(more precise estimate)\", \n           color = \"blue\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Lecture-02b_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n\n::: fragment\n### Key insights:\n- Both methods give similar estimates of the mean\n- Stratified sampling produces a much narrower confidence interval\n- The variance of the mean is about 5 times smaller with stratified sampling\n- This means stratified sampling is much more precise with the same number of samples\n:::\n\n## Efficiency\n\n### What is sampling efficiency?\n- A measure of how much \"bang for your buck\" you get with different sampling methods\n- Calculated as a ratio:\n  $$\\text{Efficiency} = \\frac{\\text{Variance of SRS}}{\\text{Variance of Stratified}}$$\n\n::: fragment\n### In simple terms:\n- Efficiency > 1: Stratified sampling is better (more precise with same sample size)\n- Efficiency = 5 means: You'd need 5 times as many samples with simple random sampling to get the same precision as stratified sampling\n:::\n\n::: fragment\n### In R\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nefficiency <- 50.83 / 9.30\nefficiency\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5.465591\n```\n\n\n:::\n:::\n\n\n\n\n\nHow many samples would we have had to collect using simple random sampling to achieve the same precision as our stratified sample?\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nround(7 * efficiency, 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 38\n```\n\n\n:::\n:::\n\n\n\n\nSo we would need about 38 samples with simple random sampling to get the same precision that we achieved with just 7 samples using stratified sampling!\n:::\n\n## Tips on implementation\n\n- The most difficult part is to **identify** the strata and **assign** the sampling units to the strata\n- Common stratification variables in environmental science:\n  - **Spatial**: elevation bands, soil types, vegetation zones\n  - **Temporal**: seasons, time of day, growth stages\n  - **Management**: treatment types, land-use history\n- **Strata sampling size**: allocate samples to strata based on the size of the strata, either proportional to:\n  - the size of the strata (e.g. 60% of area = 60% of samples)\n  - the variance of the strata (more samples where variation is higher)\n  \n# Monitoring\nWhat if we come back and do another set of soil carbon measurements?\n\n## The change in mean $\\Delta \\bar y$\n\n### Important considerations\n\n::: incremental\n- We want to measure change in soil carbon over time\n- Key question: **How do we select sites for the second measurement?**\n  1. Return to the **same sites**?\n  2. Select completely **new sites**?\n- This choice affects our statistical analysis (covariance)\n:::\n\n\n## Monitoring estimates\n\n### Change in mean $\\Delta \\bar y$\n\n> The difference between the means of the two sets of measurements.\n\n$$\\Delta \\bar y = \\bar y_2 - \\bar y_1$$\n\nwhere $\\bar y_2$ and $\\bar y_1$ are the means of the second and first set of measurements, respectively.\n\n## Uncertainty in change estimates\n\n::: fragment\n### Variance *of the change in mean* $Var(\\Delta{\\bar y})$\n\nThis tells us how precise our estimate of the change is. It depends on:\n\n$$Var(\\Delta{\\bar y}) = Var(\\bar y_2) + Var(\\bar y_1) - 2 \\times Cov(\\bar y_2, \\bar y_1)$$\n\n**In simple terms:**\n\n- The uncertainty in our change estimate comes from the uncertainties in both measurements\n- However, if we sample the same sites twice, they are related to each other (covariance)\n- This relationship usually reduces the overall uncertainty in our change estimate\n:::\n\n::: fragment\n**Important:** Visiting the same sites twice (paired sampling) usually gives more precise estimates of change than visiting different sites each time!\n:::\n\n## Covariance and site selection\n\n### Quick decision guide\n\n1. **Same sites?** Use paired approach:\n   - Sites are the same in both visits\n   - Use paired t-test\n   - Account for covariance between visits\n\n2. **Different sites?** Use independent approach:\n   - New random sites in second visit\n   - Use two-sample t-test\n   - No covariance between visits\n\n## What is covariance?\n\n::: fragment\nCovariance measures how two measurements relate to each other:\n\n**Example with soil carbon:**\n\n- Site 1: First visit = 90 t/ha, Second visit = 95 t/ha\n- Site 2: First visit = 48 t/ha, Second visit = 52 t/ha\n- Site 3: First visit = 71 t/ha, Second visit = 75 t/ha\n:::\n\n::: fragment\n**What do you notice?** Sites with high carbon in the first measurement still have high carbon in the second measurement (positive covariance).\n\n**Why this matters:** Knowing the first measurement helps us predict the second one, reducing uncertainty in our estimate of change.\n:::\n\n::: fragment\n**Practical takeaway:** When measuring change over time, returning to the same sites usually gives more precise results because it removes site-to-site variation.\n:::\n\n## Calculating the 95% CI for the change in mean\n\n### The formula looks similar to before:\n$$95\\%\\ CI = \\Delta \\bar y \\pm t^{0.025}_{n-1} \\times SE(\\Delta \\bar y)$$\n\n::: fragment\n### In plain language:\n- We have our best estimate of the change (the difference between the two means)\n- We add and subtract a margin of error to create a range\n- We're 95% confident that the true change falls within this range\n:::\n\n::: fragment\n### The standard error of the change $SE(\\Delta \\bar y)$\n- This tells us how precise our estimate of the change is\n- It's complicated to calculate by hand, especially when we visit the same sites twice\n- If we visit the same sites twice, we need to account for their relationship (covariance)\n:::\n\n::: fragment\n**Good news!** You don't need to calculate this by hand!\n\n- R can do these calculations for you using the `t.test()` function\n- For same sites: use `paired = TRUE` option\n- For different sites: use `paired = FALSE` option\n- We'll practice this in the lab!\n:::\n\n\n\n## Thanks!\n### Questions?\nThis presentation is based on the [SOLES Quarto reveal.js template](https://github.com/usyd-soles-edu/soles-revealjs) and is licensed under a [Creative Commons Attribution 4.0 International License][cc-by].\n\n[cc-by]: http://creativecommons.org/licenses/by/4.0/\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}